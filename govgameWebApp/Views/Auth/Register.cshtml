@{ 
    ViewData["Title"] = "Register";
}

<h1 style="text-align: center;">Register</h1>
<br />
<form id="register-form" style="text-align: center;" method="post" action="/Auth/RegisterPOST">
    <label for="email">Email:</label>
    <input type="email" name="email" id="email" />
    <br />
    <label for="username">Username:</label>
    <input type="text" name="username" id="username" />
    <br />
    <label for="password">Password:</label>
    <input type="password" name="password" id="password" />
    <br />
    <label for="password-confirm">Password confirm:</label>
    <input type="password" name="password-confirm" id="password-confirm" />
    <br />
    <br />
    <button type="button" onclick="formSubmitted()">Register</button>
</form>

@section Scripts
{
<script>
    var firebaseConfig = {
        apiKey: "AIzaSyBgcaRD71YU9H8TEnj82iDnkeNuOSXrfcM",
        authDomain: "government-game.firebaseapp.com",
        databaseURL: "https://government-game.firebaseio.com",
        projectId: "government-game",
        storageBucket: "government-game.appspot.com",
        messagingSenderId: "1038258061620",
        appId: "1:1038258061620:web:a2a96589a58a2c9570a561",
        measurementId: "G-EW4LVNGLVK"
    };
    firebase.initializeApp(firebaseConfig)

    firebase.auth().setPersistence(firebase.auth.Auth.Persistence.NONE)

    var actionCodeSettings = {
        url: "https://govgame.crumble-technologies.co.uk/Auth/EmailVerified"
    }

    const urlParams = new URLSearchParams(location.href)
    var urlError = urlParams.get("error")
    switch (urlError) {
        case "usernameTaken":
            alert("Sorry. That username is already taken.")

        default:
            break
    }

    function formSubmitted() {
        if (document.getElementById("password").value != document.getElementById("password-confirm").value) {
            alert("The passwords you entered do not match.")
        }

        var form = document.getElementById("register-form");

        var idTokenInput = document.createElement("input")
        idTokenInput.setAttribute("name", "idToken")
        idTokenInput.setAttribute("type", "text");
        idTokenInput.style.display = "none"
        firebase.auth().createUserWithEmailAndPassword(document.getElementById("email").value, document.getElementById("password").value).then(user => {
            firebase.auth().currentUser.getIdToken().then(idToken => {
                idTokenInput.setAttribute("value", idToken)
                form.appendChild(idTokenInput)
                console.log(idToken)

                firebase.auth().currentUser.sendEmailVerification(actionCodeSettings).then(() => {
                    form.submit()
                })
            })
        }).catch(error => {
            alert(error.message)
        })
    }
</script>
}
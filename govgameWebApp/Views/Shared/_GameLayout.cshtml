@using govgameSharedClasses.Helpers;
@{
    User user = (User)ViewData["user"];

    Country country = (Country)ViewData["country"];

    MinistryHelper.MinistryCode ministryDashboard = (MinistryHelper.MinistryCode)ViewData["ministryDashboard"];

    int unreadNotifications = (int)ViewData["unreadNotifications"];
    int unreadEmails = (int)ViewData["unreadEmails"];

    string flagName;
    try
    {
        flagName = CountryGenerationHelper.flagNames[country.FlagId];
    }
    catch
    {
        flagName = "none";
    }
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    @if (country != null)
    {
        <title>@ViewData["Title"] - @country.CountryName - GovSim</title>
    }
    else
    {
        <title>@ViewData["Title"] - GovSim</title>
    }
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" />
    <link rel="preconnect" href="https://fonts.gstatic.com">
    <link href="https://fonts.googleapis.com/css2?family=Arvo:wght@700&display=swap" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Roboto+Slab&display=swap" rel="stylesheet">
</head>
<body>
    <header>
        <h5 id="govsim-text"><a href="/">GovSim</a></h5>
        @if (country != null)
        {
            <a href="/Game/CountryDashboard"><img id="country-flag" height="100" src="~/images/flags/@(flagName).png" title="Go to Country Dashboard" /></a>
            <div id="other-header-text-div">
                <h1 id="country-name-text" title="Go to Country Dashboard"><a href="/Game/CountryDashboard" class="nav-a">@country.CountryName</a></h1>
                <h3 id="page-name-text">Page: @ViewData["PageName"]</h3>
            </div>
        }
        else
        {
            <h3 id="no-country-page-name">Page: @ViewData["PageName"]</h3>
        }
        <nav>
            <ul class="nav justify-content-end">
                <li class="nav-item @if (unreadNotifications != 0) { <text>unread</text> }">
                    <a class="nav-link nav-a" href="/Game/Notifications">
                        Notifications @if (unreadEmails != 0)
                        {<text>(@unreadNotifications)</text>}
                    </a>
                </li>
                <li class="nav-item @if (unreadEmails != 0) { <text>unread</text> }">
                    <a class="nav-link nav-a" href="/Game/Emails">
                        Emails @if (unreadEmails != 0)
                        {<text>(@unreadEmails)</text>}
                    </a>
                </li>
                <li class="nav-item"><a class="nav-link">Logged in as: @user.Username</a></li>
                <li class="nav-item"><a class="nav-link nav-a" href="/Auth/LogOut">Log out</a></li>
            </ul>
        </nav>
    </header>
    <br />
    <main @if (ViewData["PageName"].ToString() != "Emails") { <text> id="emails-main" </text> }>
        @RenderBody()
    </main>

    <style>
        body {
            font-family: 'Roboto Slab', serif;
        }

        header {
            overflow: hidden;
            position: sticky;
            top: 0;
            border-bottom: 5px solid @MinistryHelper.MinistryCodeToMinistryHexColour(ministryDashboard, true);
        }

        .unread {
            background-color: darkorange;
        }

        #govsim-text {
            font-family: 'Arvo', serif;
            float: left;
            margin: 0;
            @if (country != null)
            {
                <text>line-height: 110px;</text>
            }
            else
            {
                <text>line-height: 50px;</text>
            }
            margin-left: 10px;
            border-right: 1px solid black;
            padding-right: 10px;
            margin-top: 5px;
            margin-bottom: 5px;
        }

        #country-flag {
            float: left;
            margin-top: 10px;
            margin-bottom: 10px;
            margin-left: 10px;
        }

        #other-header-text-div {
            float: left;
            display: grid;
            grid-template-rows: 70px 50px;
        }

        #country-name-text {
            margin-left: 10px;
            margin-top: 10px;
        }

        #page-name-text {
            margin-left: 10px;
            color: #151515;
        }

        #no-country-page-name {
            margin-top: 10px;
            margin-left: 10px;
            margin-bottom: 10px;
            color: #151515;
            float: left;
        }

        #emails-main {
            margin-left: 50px;
            margin-right: 50px;
        }
    </style>

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/lib/microsoft/signalr/dist/browser/signalr.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    <script>
        $(document).ready(function () {
            $('[data-toggle="tooltip"]').tooltip()
        })

        var connection = new signalR.HubConnectionBuilder().withUrl("/TimeManagerHub").build()

        connection.on("NewTime", function (minutesPastEpoch) {
            var timeString = ""

            timeString += Math.floor(minutesPastEpoch / 60 / 24)
            timeString += " days "
            timeString += (Math.floor(minutesPastEpoch / 60) % 24).toString().padStart(2, '0')
            timeString += ":"
            timeString += (minutesPastEpoch % 60).toString().padStart(2, '0')

            document.getElementById("time-h5").innerHTML = timeString
        })

        connection.start().catch(function (err) {
            return console.error(err.toString())
        })
    </script>
    @RenderSection("Scripts", required: false)
</body>
</html>
